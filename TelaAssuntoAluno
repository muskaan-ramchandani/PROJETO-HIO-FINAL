package view.TelasGuiOlimpiadasAluno;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.*;
import java.awt.event.ActionListener;
import java.awt.event.MouseListener;
import java.util.ArrayList;

import javax.swing.*;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JMenuBar;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

import controller.AssuntosCONTROLLER;
import controller.SubtopicosDosAssuntosCONTROLLER;
import view.TelaAdicionaAssunto;
import view.TelaAdicionaSub;
import view.TelaInicialAluno;
import vo.Aluno;
import vo.Assuntos;
import vo.Olimpiada;
import vo.SubtopicosDosAssuntos;

public class TelaAssuntosAluno extends JFrame{

	private Container contentPane;
	private JLayeredPane lp;
	private JMenuBar Barra;
	private JLabel lblLogo;
	private JLabel lblNomeOlimp;
	private JButton btnLivros;
	private JButton btnVideos;
	private JButton btnAssuntos;
	private JButton btnFlashcards;
	private JButton btnCronograma;
	private JButton btnVoltar;

	
	int tamanho = 21;
	int limite = 7;
	private JButton[] Assunto = new JButton[tamanho];
	int linha = 145;
	int coluna = 150;
	
	public TelaAssuntosAluno(Olimpiada olimp, Aluno aluno) {
		inicializarComponentes(olimp, aluno);
		definirEventos(olimp, aluno);
	}
	

	private void inicializarComponentes(Olimpiada olimp, Aluno aluno) {
		Toolkit toolkit = Toolkit.getDefaultToolkit();
		Dimension screenSize = toolkit.getScreenSize();
		setBounds(0, 0, screenSize.width, screenSize.height-40);
		contentPane=getContentPane();
		contentPane.setBackground(Color.white);
		//contentPane.setBackground(new Color (238, 130, 238));
		setLayout(null);
		

		lp = new JLayeredPane();
        Barra = new JMenuBar();
  		lblNomeOlimp = new JLabel(olimp.getNome());
        lblLogo  = new JLabel(new ImageIcon("C://Users//maria//OneDrive//Área de Trabalho//"
				+"Projeto HIO//PROJETO-HIO-FINAL//PROJETO-HIO-FINAL//Imagens HIO//bonequinhoSFMEDIO.png"));
        btnLivros = new JButton("<html><u>Livros</u></html>"); //Sublinhado
		btnVideos= new JButton("<html><u>Videos</u></html>");
		btnAssuntos = new JButton("<html><u>Assuntos</u></html>");
		btnFlashcards= new JButton("<html><u>Flashcards</u></html>");
		btnCronograma= new JButton("<html><u>Cronograma</u></html>");
		
		
		btnLivros.setFocusPainted(false);
		btnVideos.setFocusPainted(false);
		btnAssuntos.setFocusPainted(false);
		btnFlashcards.setFocusPainted(false);
		btnCronograma.setFocusPainted(false);
		
		
		btnVoltar = new JButton(new ImageIcon("C://Users//maria//OneDrive//Área de Trabalho//"
				+"Projeto HIO//PROJETO-HIO-FINAL//PROJETO-HIO-FINAL//Imagens HIO//setaPequenaRoxa.png"));
		btnVoltar.setContentAreaFilled(false); // Deixa a área de preenchimento transparente
		btnVoltar.setBorderPainted(false); // Remove a borda
		btnVoltar.setFocusPainted(false);
		
		Color roxoIndigo = new Color(75,0,130);
		Color roxoVioleta = new Color(148,0,211);
        Barra.setBackground(roxoIndigo);
        btnLivros.setBackground(roxoIndigo);
		btnLivros.setForeground(Color.WHITE);
		btnVideos.setBackground(roxoIndigo);
		btnVideos.setForeground(Color.WHITE);
		btnAssuntos.setBackground(roxoVioleta);
		btnAssuntos.setForeground(Color.WHITE);
		btnFlashcards.setBackground(roxoIndigo);
		btnFlashcards.setForeground(Color.WHITE);
		btnCronograma.setBackground(roxoIndigo);
		btnCronograma.setForeground(Color.WHITE);
		lblNomeOlimp.setForeground(Color.WHITE);
				
		//definir as fontes
  		lblNomeOlimp.setFont(new Font("Trebuchet MS", Font.PLAIN, 25));

		Font fonteBarra = new Font("Trebuchet MS", Font.PLAIN, 21);
		btnLivros.setFont(fonteBarra);
		btnVideos.setFont(fonteBarra);
		btnAssuntos.setFont(fonteBarra);
		btnFlashcards.setFont(fonteBarra);
		btnCronograma.setFont(fonteBarra);
		
		
		
		//definir as posições
		Barra.setBounds(0,0,screenSize.width, 50);
        lblLogo.setBounds(10,5,44,35);
        lblNomeOlimp.setBounds(80, 15, 250, 20);
        btnLivros.setBounds(235,7, 100, 35);
  		btnVideos.setBounds(403,7,100,35);
  		btnAssuntos.setBounds(578,7,100,35);
  		btnFlashcards.setBounds(765,7,130,35);
  		btnCronograma.setBounds(980,7,130,35);
    	btnVoltar.setBounds(10, 650, 28,25);
    	
		contentPane.add(lp);
        lp.add(Barra, new Integer(1));
        lp.add(lblLogo, new Integer(2));
        lp.add(btnLivros, new Integer(4));
		lp.add(btnVideos, new Integer(5));
		lp.add(btnAssuntos, new Integer(6));
		lp.add(btnFlashcards, new Integer(7));
		lp.add(btnCronograma, new Integer(8));
		lp.add(btnVoltar, new Integer(9));
		lp.add(lblNomeOlimp, new Integer(10));
		
		
		AssuntosCONTROLLER controlaAssuntos = new AssuntosCONTROLLER();
		ArrayList<Assuntos> listaAssuntos = controlaAssuntos.retornaAssuntos(olimp.getNome());
		
		if(listaAssuntos.isEmpty()==true) {
			JLabel lblNaoTem = new JLabel("Não há assuntos cadastrados nesta olimpíada");
			lblNaoTem.setForeground(Color.BLACK);
			lblNaoTem.setFont(new Font("Trebuchet MS", Font.BOLD, 40));
			lblNaoTem.setBounds(260, 350, 1000, 50);
			lp.add(lblNaoTem, new Integer(30));
			
		}else {
			
			SubtopicosDosAssuntosCONTROLLER controlaSub = new SubtopicosDosAssuntosCONTROLLER();
			ArrayList<SubtopicosDosAssuntos> listaSubtopicos0= new ArrayList<SubtopicosDosAssuntos>();
			
			ArrayList<SubtopicosDosAssuntos> listaSubtopicos1= new ArrayList<SubtopicosDosAssuntos>();
					
			ArrayList<SubtopicosDosAssuntos> listaSubtopicos2= new ArrayList<SubtopicosDosAssuntos>();
			
			if(listaAssuntos.size()==1) {
				
				listaSubtopicos0= controlaSub.retornaSubtopicosAssunto(olimp.getNome(),
						listaAssuntos.get(0).getTituloAssunto());
				
			}
			if(listaAssuntos.size()==2) {
				listaSubtopicos0= controlaSub.retornaSubtopicosAssunto(olimp.getNome(),
						listaAssuntos.get(0).getTituloAssunto());
				
				listaSubtopicos1= controlaSub.retornaSubtopicosAssunto(olimp.getNome(),
						listaAssuntos.get(1).getTituloAssunto());
				
			}
			if(listaAssuntos.size()==3) {
				listaSubtopicos0= controlaSub.retornaSubtopicosAssunto(olimp.getNome(),
						listaAssuntos.get(0).getTituloAssunto());
				
				listaSubtopicos1= controlaSub.retornaSubtopicosAssunto(olimp.getNome(),
						listaAssuntos.get(1).getTituloAssunto());
				
				listaSubtopicos2= controlaSub.retornaSubtopicosAssunto(olimp.getNome(),
						listaAssuntos.get(2).getTituloAssunto());
				
			}
		
			for(int i = 0;i < tamanho;i++) {
				Assunto[i]= new JButton("");
				Assunto[i].setFocusPainted(false);
				Assunto[i].setBackground(Color.WHITE);
				Assunto[i].setForeground(Color.BLACK);
				Assunto[i].setHorizontalAlignment(SwingConstants.CENTER);
				Assunto[i].setBorder(BorderFactory.createLineBorder(new Color(75, 0, 130), 3));
				Font fonteTxt = new Font("Trebuchet MS", Font.PLAIN, 20);
				Assunto[i].setFont(fonteTxt);
				if(i >= limite) {
					linha += 360;
					limite += 7;
					coluna = 150;
					
					
				}
				Assunto[i].setBounds(linha,coluna,340,69);
				lp.add(Assunto[i], new Integer(13));
				coluna=coluna+ 69;
				
			}
			
			boolean[] actionListenerAdded = new boolean[tamanho];
			

			for(int i = 0;i < tamanho;i++) {
				
				if(listaAssuntos.size()==1) {
					//tab 1
					Assunto[0].setText(listaAssuntos.get(0).getTituloAssunto());
					Font fonteTxt = new Font("Trebuchet MS", Font.BOLD, 25);
					Assunto[0].setFont(fonteTxt);
				
					int tamL0 = listaSubtopicos0.size();
					
					for(int indice =0; indice<tamL0;indice++) {
						String descricao = listaSubtopicos0.get(indice).getDescricao();
						SubtopicosDosAssuntos sub = listaSubtopicos0.get(indice);
						Assuntos assunto = listaAssuntos.get(0);
						Assunto[indice+1].setText(descricao);
						
						final SubtopicosDosAssuntos finalSub = sub; // Declare variável final
					    final Assuntos finalAssunto = assunto;
					    int buttonIndex = indice + 1;

				        if (!actionListenerAdded[buttonIndex]) {
				            Assunto[buttonIndex].addActionListener(new ActionListener() {
				                @Override
				                public void actionPerformed(ActionEvent e) {
				                    TelaTEAssuntoAluno telaTE = new TelaTEAssuntoAluno(olimp, aluno, finalSub, finalAssunto);
				                    setVisible(false);
				                }
				            });

				            actionListenerAdded[buttonIndex] = true;
				        }
						
					}
				}else if(listaAssuntos.size()==2) {
					//tab 1
					Assunto[0].setText(listaAssuntos.get(0).getTituloAssunto());
					Font fonteTxt = new Font("Trebuchet MS", Font.BOLD, 25);
					Assunto[0].setFont(fonteTxt);
				
					int tamL0 = listaSubtopicos0.size();
					
					for(int indice =0; indice<tamL0;indice++) {
						String descricao = listaSubtopicos0.get(indice).getDescricao();
						SubtopicosDosAssuntos sub = listaSubtopicos0.get(indice);
						Assuntos assunto = listaAssuntos.get(0);
						Assunto[indice+1].setText(descricao);
						
						final SubtopicosDosAssuntos finalSub = sub; // Declare variável final
					    final Assuntos finalAssunto = assunto;

					    int buttonIndex = indice + 1;

				        if (!actionListenerAdded[buttonIndex]) {
				            Assunto[buttonIndex].addActionListener(new ActionListener() {
				                @Override
				                public void actionPerformed(ActionEvent e) {
				                    TelaTEAssuntoAluno telaTE = new TelaTEAssuntoAluno(olimp, aluno, finalSub, finalAssunto);
				                    setVisible(false);
				                }
				            });

				            actionListenerAdded[buttonIndex] = true;
				        }
						
					}
					
					//tab 2
					Assunto[7].setText(listaAssuntos.get(1).getTituloAssunto());
					Assunto[7].setFont(fonteTxt);
					int tamL1 = listaSubtopicos1.size();
					
					for(int indice =0; indice<tamL1;indice++) {
						String descricao = listaSubtopicos1.get(indice).getDescricao();
						SubtopicosDosAssuntos sub = listaSubtopicos1.get(indice);
						Assuntos assunto = listaAssuntos.get(1);
						Assunto[indice+8].setText(descricao);
						
						final SubtopicosDosAssuntos finalSub = sub; // Declare variável final
					    final Assuntos finalAssunto = assunto;

					    int buttonIndex = indice + 8;

				        if (!actionListenerAdded[buttonIndex]) {
				            Assunto[buttonIndex].addActionListener(new ActionListener() {
				                @Override
				                public void actionPerformed(ActionEvent e) {
				                    TelaTEAssuntoAluno telaTE = new TelaTEAssuntoAluno(olimp, aluno, finalSub, finalAssunto);
				                    setVisible(false);
				                }
				            });

				            actionListenerAdded[buttonIndex] = true;
				        }
					}
				}else if(listaAssuntos.size()==3) {
					//tab 1
					Assunto[0].setText(listaAssuntos.get(0).getTituloAssunto());
					Font fonteTxt = new Font("Trebuchet MS", Font.BOLD, 25);
					Assunto[0].setFont(fonteTxt);
				
					int tamL0 = listaSubtopicos0.size();
					
					for(int indice =0; indice<tamL0;indice++) {
						String descricao = listaSubtopicos0.get(indice).getDescricao();
						SubtopicosDosAssuntos sub = listaSubtopicos0.get(indice);
						Assuntos assunto = listaAssuntos.get(0);
						Assunto[indice+1].setText(descricao);
						
						final SubtopicosDosAssuntos finalSub = sub; // Declare variável final
					    final Assuntos finalAssunto = assunto;
					    int buttonIndex = indice + 1;

				        if (!actionListenerAdded[buttonIndex]) {
				            Assunto[buttonIndex].addActionListener(new ActionListener() {
				                @Override
				                public void actionPerformed(ActionEvent e) {
				                    TelaTEAssuntoAluno telaTE = new TelaTEAssuntoAluno(olimp, aluno, finalSub, finalAssunto);
				                    setVisible(false);
				                }
				            });

				            actionListenerAdded[buttonIndex] = true;
				        }
						
					}
					
					//tab 2
					Assunto[7].setText(listaAssuntos.get(1).getTituloAssunto());
					Assunto[7].setFont(fonteTxt);
					int tamL1 = listaSubtopicos1.size();
					
					for(int indice =0; indice<tamL1;indice++) {
						String descricao = listaSubtopicos1.get(indice).getDescricao();
						SubtopicosDosAssuntos sub = listaSubtopicos1.get(indice);
						Assuntos assunto = listaAssuntos.get(1);
						Assunto[indice+8].setText(descricao);
						
						final SubtopicosDosAssuntos finalSub = sub; // Declare variável final
					    final Assuntos finalAssunto = assunto;
					    int buttonIndex = indice + 8;

				        if (!actionListenerAdded[buttonIndex]) {
				            Assunto[buttonIndex].addActionListener(new ActionListener() {
				                @Override
				                public void actionPerformed(ActionEvent e) {
				                    TelaTEAssuntoAluno telaTE = new TelaTEAssuntoAluno(olimp, aluno, finalSub, finalAssunto);
				                    setVisible(false);
				                }
				            });

				            actionListenerAdded[buttonIndex] = true;
				        }
					}
					
					//tab 3
					Assunto[14].setText(listaAssuntos.get(2).getTituloAssunto());
					Assunto[14].setFont(fonteTxt);
					int tamL2 = listaSubtopicos2.size();
					
					for(int indice =0; indice<tamL2;indice++) {
						String descricao = listaSubtopicos2.get(indice).getDescricao();
						SubtopicosDosAssuntos sub = listaSubtopicos2.get(indice);
						Assuntos assunto = listaAssuntos.get(2);
						Assunto[indice+15].setText(descricao);
						
						final SubtopicosDosAssuntos finalSub = sub; // Declare variável final
					    final Assuntos finalAssunto = assunto;
					    int buttonIndex = indice + 15;

				        if (!actionListenerAdded[buttonIndex]) {
				            Assunto[buttonIndex].addActionListener(new ActionListener() {
				                @Override
				                public void actionPerformed(ActionEvent e) {
				                    TelaTEAssuntoAluno telaTE = new TelaTEAssuntoAluno(olimp, aluno, finalSub, finalAssunto);
				                    setVisible(false);
				                }
				            });

				            actionListenerAdded[buttonIndex] = true;
				        }
					}
				}

			
			}
			
		}
		
		
		
		//tirar borda
        setLayout(new BorderLayout());
        add(lp, BorderLayout.CENTER);
        btnLivros.setBorderPainted(false);
        btnVideos.setBorderPainted(false);
        btnAssuntos.setBorderPainted(false);
        btnFlashcards.setBorderPainted(false);
        btnCronograma.setBorderPainted(false);
        
        setVisible(true);

		
	}
	
	private void definirEventos(Olimpiada olimp, Aluno aluno) {
		
		btnLivros.addMouseListener(new MouseListener() {
			Color roxoIndigo = new Color(75,0,130);
			Color roxoVioleta = new Color(148,0,211);
			
			@Override
			public void mouseClicked(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mousePressed(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseReleased(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseEntered(java.awt.event.MouseEvent e) {
				btnLivros.setBackground(roxoVioleta);
			}
			@Override
			public void mouseExited(java.awt.event.MouseEvent e) {
				btnLivros.setBackground(roxoIndigo); // Retorna à cor padrão do botão
			}
        });
		
		btnLivros.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				TelaLivrosAluno livro = new TelaLivrosAluno(olimp, aluno);
				setVisible(false);

			}
		});
		
		btnCronograma.addMouseListener(new MouseListener() {
			Color roxoIndigo = new Color(75,0,130);
			Color roxoVioleta = new Color(148,0,211);
			
			@Override
			public void mouseClicked(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mousePressed(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseReleased(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseEntered(java.awt.event.MouseEvent e) {
				btnCronograma.setBackground(roxoVioleta);
			}
			@Override
			public void mouseExited(java.awt.event.MouseEvent e) {
				btnCronograma.setBackground(roxoIndigo); // Retorna à cor padrão do botão
			}
        });
		
		btnCronograma.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				TelaCronogramaAluno tela = new TelaCronogramaAluno(olimp, aluno);
			     setVisible(false);

			}
		});
		
		btnVideos.addMouseListener(new MouseListener() {
			Color roxoIndigo = new Color(75,0,130);
			Color roxoVioleta = new Color(148,0,211);
			
			@Override
			public void mouseClicked(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mousePressed(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseReleased(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseEntered(java.awt.event.MouseEvent e) {
				btnVideos.setBackground(roxoVioleta);
			}
			@Override
			public void mouseExited(java.awt.event.MouseEvent e) {
				btnVideos.setBackground(roxoIndigo); // Retorna à cor padrão do botão
			}
        });
		
		btnVideos.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				TelaVideosAluno videos = new TelaVideosAluno(olimp, aluno);
			     setVisible(false);

			}
		});
		
		btnFlashcards.addMouseListener(new MouseListener() {
			Color roxoIndigo = new Color(75,0,130);
			Color roxoVioleta = new Color(148,0,211);
			@Override
			public void mouseClicked(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mousePressed(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseReleased(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseEntered(java.awt.event.MouseEvent e) {
				btnFlashcards.setBackground(roxoVioleta);
			}
			@Override
			public void mouseExited(java.awt.event.MouseEvent e) {
				btnFlashcards.setBackground(roxoIndigo); // Retorna à cor padrão do botão
			}
        });
		
		btnFlashcards.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				 TelaFlashcardsAluno flash = new TelaFlashcardsAluno(olimp, aluno);
			     setVisible(false);
			}
		});
		
		 btnVoltar.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					TelaInicialAluno tela = new TelaInicialAluno(aluno, true);
				     setVisible(false);
				}
			});
		
	}
}
