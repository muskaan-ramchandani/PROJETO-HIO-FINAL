package view.TelasGuiOlimpiadasProf;

import vo.Assuntos;
import vo.Olimpiada;
import vo.Professor;
import vo.SubtopicosDosAssuntos;

import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseListener;
import java.util.ArrayList;

import javax.swing.border.AbstractBorder;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

import controller.AssuntosCONTROLLER;
import controller.OlimpiadaCONTROLLER;
import controller.ProfessorCONTROLLER;
import controller.SubtopicosDosAssuntosCONTROLLER;
import view.TelaInicialProf;

public class TelaAssuntosProf extends JFrame{
	private Container contentPane;
	private JLayeredPane lp;
	private JMenuBar Barra;
	private JLabel lblLogo;
	private JLabel lblNomeOlimp;
	private JButton btnLivros;
	private JButton btnVideos;
	private JButton btnAssuntos;
	private JButton btnFlashcards;
	private JButton btnCronograma;
	private JButton btnVoltar;
	private JButton btnAdicionarAssunto;
	private JButton btnAdicionarSubtopico;
	
	int tamanho = 21;
	int limite = 7;
	private JButton[] Assunto = new JButton[tamanho];
	int linha = 145;
	int coluna = 150;
	
	public TelaAssuntosProf(Olimpiada olimp, Professor prof) {
		inicializarComponentes(olimp, prof);
		definirEventos(olimp, prof);
	}
	

	private void inicializarComponentes(Olimpiada olimp, Professor prof) {
		Toolkit toolkit = Toolkit.getDefaultToolkit();
		Dimension screenSize = toolkit.getScreenSize();
		setBounds(0, 0, screenSize.width, screenSize.height-40);
		contentPane=getContentPane();
		contentPane.setBackground(Color.white);
		//contentPane.setBackground(new Color (238, 130, 238));
		setLayout(null);
		

		lp = new JLayeredPane();
        Barra = new JMenuBar();
  		lblNomeOlimp = new JLabel(olimp.getNome());
        lblLogo  = new JLabel(new ImageIcon("C://Users//maria//OneDrive//Área de Trabalho//"
				+"Projeto HIO//PROJETO-HIO-FINAL//PROJETO-HIO-FINAL//Imagens HIO//bonequinhoSFMEDIO.png"));
        btnLivros = new JButton("<html><u>Livros</u></html>"); //Sublinhado
		btnVideos= new JButton("<html><u>Videos</u></html>");
		btnAssuntos = new JButton("<html><u>Assuntos</u></html>");
		btnFlashcards= new JButton("<html><u>Flashcards</u></html>");
		btnCronograma= new JButton("<html><u>Cronograma</u></html>");
		
		btnAdicionarAssunto= new JButton("Adicionar assunto");
		btnAdicionarSubtopico = new JButton("Adicionar subtópico");
		
		btnLivros.setFocusPainted(false);
		btnVideos.setFocusPainted(false);
		btnAssuntos.setFocusPainted(false);
		btnFlashcards.setFocusPainted(false);
		btnCronograma.setFocusPainted(false);
		
		btnVoltar = new JButton(new ImageIcon("C://Users//maria//OneDrive//Área de Trabalho//"
				+"Projeto HIO//PROJETO-HIO-FINAL//PROJETO-HIO-FINAL//Imagens HIO//setaPequenaRoxa.png"));
		btnVoltar.setContentAreaFilled(false); // Deixa a área de preenchimento transparente
		btnVoltar.setBorderPainted(false); // Remove a borda
		btnVoltar.setFocusPainted(false);
		
		Color roxoIndigo = new Color(75,0,130);
		Color roxoVioleta = new Color(148,0,211);
        Barra.setBackground(roxoIndigo);
        btnLivros.setBackground(roxoIndigo);
		btnLivros.setForeground(Color.WHITE);
		btnVideos.setBackground(roxoIndigo);
		btnVideos.setForeground(Color.WHITE);
		btnAssuntos.setBackground(roxoVioleta);
		btnAssuntos.setForeground(Color.WHITE);
		btnFlashcards.setBackground(roxoIndigo);
		btnFlashcards.setForeground(Color.WHITE);
		btnCronograma.setBackground(roxoIndigo);
		btnCronograma.setForeground(Color.WHITE);
		lblNomeOlimp.setForeground(Color.WHITE);
		btnAdicionarAssunto.setForeground(Color.BLACK);
		btnAdicionarSubtopico.setForeground(Color.BLACK);
		
		//definir as fontes
  		lblNomeOlimp.setFont(new Font("Trebuchet MS", Font.PLAIN, 25));

		Font fonteBarra = new Font("Trebuchet MS", Font.PLAIN, 21);
		btnLivros.setFont(fonteBarra);
		btnVideos.setFont(fonteBarra);
		btnAssuntos.setFont(fonteBarra);
		btnFlashcards.setFont(fonteBarra);
		btnCronograma.setFont(fonteBarra);
		
		Font fonteBtnsA = new Font("Trebuchet MS", Font.PLAIN, 20);
		btnAdicionarAssunto.setFont(fonteBtnsA);
		btnAdicionarSubtopico.setFont(fonteBtnsA);
		
		
		//definir as posições
		Barra.setBounds(0,0,screenSize.width, 50);
        lblLogo.setBounds(10,5,44,35);
        lblNomeOlimp.setBounds(80, 15, 250, 20);
        btnLivros.setBounds(235,7, 100, 35);
  		btnVideos.setBounds(403,7,100,35);
  		btnAssuntos.setBounds(578,7,100,35);
  		btnFlashcards.setBounds(765,7,130,35);
  		btnCronograma.setBounds(980,7,130,35);
    	btnVoltar.setBounds(10, 650, 28,25);
    	btnAdicionarAssunto.setBounds(770, 20, 300, 25);
		btnAdicionarSubtopico.setBounds(916, 20, 350, 25);

		contentPane.add(lp);
        lp.add(Barra, new Integer(1));
        lp.add(lblLogo, new Integer(2));
        lp.add(btnLivros, new Integer(4));
		lp.add(btnVideos, new Integer(5));
		lp.add(btnAssuntos, new Integer(6));
		lp.add(btnFlashcards, new Integer(7));
		lp.add(btnCronograma, new Integer(8));
		lp.add(btnVoltar, new Integer(9));
		lp.add(lblNomeOlimp, new Integer(10));
		lp.add(btnAdicionarAssunto, new Integer(11));
		lp.add(btnAdicionarSubtopico, new Integer(12));
		//verificar se há assuntos e subtopicos, botao de adicionar assuntos
		
		AssuntosCONTROLLER controlaAssuntos = new AssuntosCONTROLLER();
		ArrayList<Assuntos> listaAssuntos = controlaAssuntos.retornaAssuntos(olimp.getNome());
		
		if(listaAssuntos==null) {
			JLabel lblNaoTem = new JLabel("Não há assuntos cadastrados nesta olimpíada");
			lblNaoTem.setForeground(Color.BLACK);
			lblNaoTem.setFont(new Font("Trebuchet MS", Font.BOLD, 40));
			lblNaoTem.setBounds(250, 350, 1000, 50);
			lp.add(lblNaoTem, new Integer(30));
			
		}else {
			
			for(int i = 0;i < tamanho;i++) {
				Assunto[i]= new JButton("");

				
				SubtopicosDosAssuntosCONTROLLER controlaSub = new SubtopicosDosAssuntosCONTROLLER();
				ArrayList<SubtopicosDosAssuntos> listaSubtopicos0= controlaSub.retornaSubtopicosAssunto(olimp.getNome(),
						listaAssuntos.get(0).getTituloAssunto());
				
				ArrayList<SubtopicosDosAssuntos> listaSubtopicos1= controlaSub.retornaSubtopicosAssunto(olimp.getNome(),
						listaAssuntos.get(1).getTituloAssunto());
						
				ArrayList<SubtopicosDosAssuntos> listaSubtopicos2= controlaSub.retornaSubtopicosAssunto(olimp.getNome(),
						listaAssuntos.get(2).getTituloAssunto());
				
				//tab 1
				Assunto[0]= new JButton(listaAssuntos.get(0).getTituloAssunto());
				
				for(int indice=0; indice<listaSubtopicos0.size(); indice++) {
					
					Assunto[i+1]= new JButton(listaSubtopicos0.get(0).getDescricao());
					
					Assunto[i+1].addActionListener(new ActionListener() {
						@Override
						public void actionPerformed(ActionEvent e) {
							TelaTEAssuntoProf telaTE = new TelaTEAssuntoProf(olimp.getNome(), prof, listaSubtopicos0.get(0).getDescricao());
							setVisible(false);
						}
					});
				}
				
				//tab 2
				Assunto[7]= new JButton(listaAssuntos.get(1).getTituloAssunto());
				
				//tab 3
				Assunto[14]= new JButton(listaAssuntos.get(2).getTituloAssunto());
				

				Assunto[i].setFocusPainted(false);
				Assunto[i].setBackground(Color.WHITE);
				Assunto[i].setForeground(Color.BLACK);
				Assunto[i].setHorizontalAlignment(SwingConstants.CENTER);
				Assunto[i].setBorder(BorderFactory.createLineBorder(new Color(75, 0, 130), 3));
				Font fonteTxt = new Font("Trebuchet MS", Font.PLAIN, 20);
				Assunto[i].setFont(fonteTxt);
				if(i >= limite) {
					linha += 360;
					limite += 7;
					coluna = 150;
					
					
				}
				Assunto[i].setBounds(linha,coluna,340,69);
				lp.add(Assunto[i], new Integer(13));
				coluna=coluna+ 69;
			}
			
		}
		
		
		
		//tirar borda
        setLayout(new BorderLayout());
        add(lp, BorderLayout.CENTER);
        btnLivros.setBorderPainted(false);
        btnVideos.setBorderPainted(false);
        btnAssuntos.setBorderPainted(false);
        btnFlashcards.setBorderPainted(false);
        btnCronograma.setBorderPainted(false);
        
        setVisible(true);

		
	}
	
	private void definirEventos(Olimpiada olimp, Professor prof) {
		
		
		btnLivros.addMouseListener(new MouseListener() {
			Color roxoIndigo = new Color(75,0,130);
			Color roxoVioleta = new Color(148,0,211);
			
			@Override
			public void mouseClicked(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mousePressed(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseReleased(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseEntered(java.awt.event.MouseEvent e) {
				btnLivros.setBackground(roxoVioleta);
			}
			@Override
			public void mouseExited(java.awt.event.MouseEvent e) {
				btnLivros.setBackground(roxoIndigo); // Retorna à cor padrão do botão
			}
        });
		
		btnLivros.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				TelaLivrosProf livro = new TelaLivrosProf(olimp, prof);
				setVisible(false);

			}
		});
		
		btnCronograma.addMouseListener(new MouseListener() {
			Color roxoIndigo = new Color(75,0,130);
			Color roxoVioleta = new Color(148,0,211);
			
			@Override
			public void mouseClicked(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mousePressed(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseReleased(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseEntered(java.awt.event.MouseEvent e) {
				btnCronograma.setBackground(roxoVioleta);
			}
			@Override
			public void mouseExited(java.awt.event.MouseEvent e) {
				btnCronograma.setBackground(roxoIndigo); // Retorna à cor padrão do botão
			}
        });
		
		btnCronograma.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				TelaCronogramaProf tela = new TelaCronogramaProf(olimp, prof);
			     setVisible(false);

			}
		});
		
		btnVideos.addMouseListener(new MouseListener() {
			Color roxoIndigo = new Color(75,0,130);
			Color roxoVioleta = new Color(148,0,211);
			
			@Override
			public void mouseClicked(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mousePressed(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseReleased(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseEntered(java.awt.event.MouseEvent e) {
				btnVideos.setBackground(roxoVioleta);
			}
			@Override
			public void mouseExited(java.awt.event.MouseEvent e) {
				btnVideos.setBackground(roxoIndigo); // Retorna à cor padrão do botão
			}
        });
		
		btnVideos.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				TelaVideosProf videos = new TelaVideosProf(olimp, prof);
			     setVisible(false);

			}
		});
		
		btnFlashcards.addMouseListener(new MouseListener() {
			Color roxoIndigo = new Color(75,0,130);
			Color roxoVioleta = new Color(148,0,211);
			@Override
			public void mouseClicked(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mousePressed(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseReleased(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseEntered(java.awt.event.MouseEvent e) {
				btnFlashcards.setBackground(roxoVioleta);
			}
			@Override
			public void mouseExited(java.awt.event.MouseEvent e) {
				btnFlashcards.setBackground(roxoIndigo); // Retorna à cor padrão do botão
			}
        });
		
		btnFlashcards.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				 TelaFlashcardsProf flash = new TelaFlashcardsProf(olimp, prof);
			     setVisible(false);
			}
		});
		
		 btnVoltar.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					TelaInicialProf tela = new TelaInicialProf(prof, true);
				     setVisible(false);
				}
			});
		
	}
		
	

    public static void main(String[] args) {
    	ProfessorCONTROLLER controla= new ProfessorCONTROLLER();
    	Professor prof = controla.obterProfExistente("juju@gmail.com");
    	OlimpiadaCONTROLLER contOlimp = new OlimpiadaCONTROLLER();
    	Olimpiada olimp = contOlimp.obterOlimpiadaExistente("ONC");
        TelaAssuntosProf tela = new TelaAssuntosProf(olimp, prof);
        
    }

}
