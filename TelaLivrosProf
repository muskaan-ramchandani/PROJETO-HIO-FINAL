package view.TelasGuiOlimpiadasProf;

import javax.swing.*;
import org.w3c.dom.events.MouseEvent;
import vo.Professor;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseListener;
import java.time.format.DateTimeFormatter;
import java.util.Date;

import controller.OlimpiadaCONTROLLER;
import vo.Olimpiada;

public class TelaLivrosProf extends JFrame{
	private Container contentPane;
	private JPanel telaCadastro;
	private JPanel telaLivros;
	private JLayeredPane lp;
	private JMenuBar barra;
	private JLabel lblLogo;
	private JLabel lblNomeOlimp;
	private JButton btnLivros;
	private JButton btnVideos;
	private JButton btnAssuntos;
	private JButton btnFlashcards;
	private JButton btnCronograma;
	
	private JLabel lblCadastrarLivro;
	private JLabel lblIsbn;
	private JTextField txtIsbn;
	private JLabel lblTitulo;
	private JTextField txtTitulo;
	private JLabel lblEditora;
	private JTextField txtEditora;
	private JLabel lblAutor;
	private JTextField txtAutor;
	private JLabel lblDataPublicacao;
	private JTextField txtDataPublicacao;
	private JLabel lblArquivoPDF;
	private JFileChooser selecionaPDF;
	private JButton btnCadastrar;
    private JSplitPane splitPane;
    private JLayeredPane lpCadastro;
    private JLayeredPane lpLivros;

    private Color roxoIndigo = new Color(75,0,130);
	
	public TelaLivrosProf(Olimpiada olimp, Professor prof) {
		inicializarComponentes(olimp, prof);
		definirEventos(olimp, prof);
		setVisible(true);
	}
	public void inicializarComponentes(Olimpiada olimp, Professor prof) {
		//configura tela
		Toolkit toolkit = Toolkit.getDefaultToolkit();
		Dimension screenSize = toolkit.getScreenSize();
		setBounds(0, 0, screenSize.width, screenSize.height-40);
		contentPane=getContentPane();
        contentPane.setBackground(Color.white);
		
		//inicializa
        splitPane = new JSplitPane(JSplitPane.VERTICAL_SPLIT);
		lp= new JLayeredPane();
		barra= new JMenuBar();
		
		lblLogo  = new JLabel(new ImageIcon("C://Users//maria//OneDrive//Área de Trabalho//"
				+"Projeto HIO//PROJETO-HIO-FINAL//PROJETO-HIO-FINAL//Imagens HIO//bonequinhoSFMEDIO.png"));
		
		lblNomeOlimp = new JLabel(olimp.getNome());
		btnLivros = new JButton("<html><u>Livros</u></html>"); //Sublinhado
		btnVideos= new JButton("<html><u>Videos</u></html>");
		btnAssuntos = new JButton("<html><u>Assuntos</u></html>");
		btnFlashcards= new JButton("<html><u>Flashcards</u></html>");
		btnCronograma= new JButton("<html><u>Cronograma</u></html>");
		
		//cores		
		barra.setBackground(roxoIndigo);
		lblNomeOlimp.setBackground(roxoIndigo);
		lblNomeOlimp.setForeground(Color.WHITE);
		btnVideos.setBackground(roxoIndigo);
		btnVideos.setForeground(Color.WHITE);
		btnAssuntos.setBackground(roxoIndigo);
		btnAssuntos.setForeground(Color.WHITE);
		btnFlashcards.setBackground(roxoIndigo);
		btnFlashcards.setForeground(Color.WHITE);
		btnCronograma.setBackground(roxoIndigo);
		btnCronograma.setForeground(Color.WHITE);
		
		Color roxoVioleta = new Color(148,0,211);
		btnLivros.setBackground(roxoVioleta);
		btnLivros.setForeground(Color.WHITE);

		
		//formatações
		lblNomeOlimp.setFont(new Font("Trebuchet MS", Font.PLAIN, 25));
		
		Font fonteBarra = new Font("Trebuchet MS", Font.PLAIN, 20);
		btnLivros.setFont(fonteBarra);
		btnVideos.setFont(fonteBarra);
		btnAssuntos.setFont(fonteBarra);
		btnFlashcards.setFont(fonteBarra);
		btnCronograma.setFont(fonteBarra);

		//coordenadas
		lp.setBounds(0, 0, screenSize.width, screenSize.height-40);
        barra.setBounds(0,0,screenSize.width, 50);
        lblLogo.setBounds(10,5,44,35);
        lblNomeOlimp.setBounds(80, 15, 250, 20);
        btnLivros.setBounds(235,7, 100, 35);
		btnVideos.setBounds(403,7,100,35);
		btnAssuntos.setBounds(578,7,100,35);
		btnFlashcards.setBounds(765,7,130,35);
		btnCronograma.setBounds(980,7,130,35);
		
		  // Primeira área (sem JScrollPane) CADASTRO
        lpCadastro = new JLayeredPane();
        lpCadastro.setBackground(Color.white);
              
      		lblCadastrarLivro = new JLabel("Cadastrar Livro");
      		lblIsbn= new JLabel();
      		txtIsbn = new JTextField(13);
      		lblTitulo= new JLabel("Título:");
      		txtTitulo = new JTextField(100);
      		lblEditora= new JLabel("Editora:");
      		txtEditora = new JTextField(60);
      		lblAutor= new JLabel("Autor:");
      		txtAutor = new JTextField(200);
      		lblDataPublicacao= new JLabel("Data de publicação:");;
      		txtDataPublicacao = new JTextField(10);
      		lblArquivoPDF= new JLabel("Selecione o arquivo pdf:");;
      		selecionaPDF= new JFileChooser();
      		btnCadastrar= new JButton("Cadastrar");
        
      		btnCadastrar.setForeground(Color.white);
      		btnCadastrar.setBackground(roxoIndigo);
      		
      		Font fonteLabelsDesc = new Font( "Trebuchet MS", Font.PLAIN, 20);
      		lblIsbn.setFont(fonteLabelsDesc);
      		lblTitulo.setFont(fonteLabelsDesc);
      		lblEditora.setFont(fonteLabelsDesc);
      		lblAutor.setFont(fonteLabelsDesc);
      		lblDataPublicacao.setFont(fonteLabelsDesc);
      		lblArquivoPDF.setFont(fonteLabelsDesc);	
    		
    		Font fonteTamanho = new Font( "Trebuchet MS", Font.PLAIN, 45);
    		lblCadastrarLivro.setFont(fonteTamanho);
    	    
    	    Font fonteTamanhoBotao = new Font( "Trebuchet MS", Font.PLAIN, 20);
    	    btnCadastrar.setFont(fonteTamanhoBotao);
    	    
    	    lblCadastrarLivro.setBounds(850,70,800,100);
    	    lblIsbn.setBounds(780,165,200,30);
    		txtIsbn.setBounds(780,205,212,30);
    		lblDataPublicacao.setBounds(1042, 165, 200, 30);
    		txtDataPublicacao.setBounds(1042, 205, 212, 30);
    		lblTitulo.setBounds(780,255,400,40);
    		txtTitulo.setBounds(780,310,425,30);
    		lblEditora.setBounds(780,345,400,40);
    		txtEditora.setBounds(780,385,425,30);
    		lblAutor.setBounds(780,435,400,40);
    		txtAutor.setBounds(780,475,425,30);
    		lblArquivoPDF.setBounds(780,525,400,40);
    		selecionaPDF.setBounds(780,565,425,30);
    		btnCadastrar.setBounds(800, 620, 245, 45);
    	    

    		lpCadastro.add(lblCadastrarLivro, new Integer(1));
    		lpCadastro.add(lblIsbn, new Integer(2));
    		lpCadastro.add(txtIsbn, new Integer(3));
    		lpCadastro.add(lblDataPublicacao, new Integer(4));
    		lpCadastro.add(txtDataPublicacao, new Integer(5));
    		lpCadastro.add(lblTitulo, new Integer(6));
    		lpCadastro.add(txtTitulo, new Integer(7));
    		lpCadastro.add(lblEditora, new Integer(8));
    		lpCadastro.add(txtEditora, new Integer(9));
    		lpCadastro.add(lblAutor, new Integer(10));
    		lpCadastro.add(txtAutor, new Integer(11));
    		lpCadastro.add(lblArquivoPDF, new Integer(12));
    		lpCadastro.add(selecionaPDF, new Integer(13));
    		lpCadastro.add(btnCadastrar, new Integer(14));

      		
      		
        // Segunda área (com JScrollPane) LIVROS
        lpLivros = new JLayeredPane();
        lpLivros.setBackground(Color.WHITE);

        JTextArea textArea = new JTextArea();

        JScrollPane scrollPane = new JScrollPane(textArea);
        scrollPane.setBounds(750, 51, 15, screenSize.height-40); // Define o tamanho e a posição do JScrollPane
        lpLivros.add(scrollPane, new Integer(1)); // Adiciona o JScrollPane ao JLayeredPane

        
        // Configura o divisor do JSplitPane para redimensionar as áreas
        splitPane.setLeftComponent(lpLivros);
        splitPane.setRightComponent(lpCadastro);
        splitPane.setDividerLocation(760);
        
		//adiciona
		contentPane.add(splitPane);

		lp.add(barra, new Integer(1));
		lp.add(lblLogo, new Integer(2));
		lp.add(lblNomeOlimp, new Integer(3));
		lp.add(btnLivros, new Integer(4));
		lp.add(btnVideos, new Integer(5));
		lp.add(btnAssuntos, new Integer(6));
		lp.add(btnFlashcards, new Integer(7));
		lp.add(btnCronograma, new Integer(8));
		contentPane.add(lp);
		
		setLayout(new BorderLayout());
        add(lp, BorderLayout.CENTER);
        btnLivros.setBorderPainted(false);
        btnVideos.setBorderPainted(false);
        btnAssuntos.setBorderPainted(false);
        btnFlashcards.setBorderPainted(false);
        btnCronograma.setBorderPainted(false);
        btnCadastrar.setBorderPainted(false);

	}
	
	public void definirEventos(Olimpiada olimp, Professor prof) {		
		btnCadastrar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				//String texto = campoData.getText();
                //Date data = dateFormat.parse(texto);
			}
		});
		
		
		btnVideos.addMouseListener(new MouseListener() {
			Color roxoIndigo = new Color(75,0,130);
			Color roxoVioleta = new Color(148,0,211);
			
			@Override
			public void mouseClicked(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mousePressed(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseReleased(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseEntered(java.awt.event.MouseEvent e) {
				btnVideos.setBackground(roxoVioleta);
			}
			@Override
			public void mouseExited(java.awt.event.MouseEvent e) {
				btnVideos.setBackground(roxoIndigo); // Retorna à cor padrão do botão
			}
        });
		
		btnVideos.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				TelaVideosProf video = new TelaVideosProf(olimp, prof);
			     setVisible(false);

			}
		});
		
		btnAssuntos.addMouseListener(new MouseListener() {
			Color roxoIndigo = new Color(75,0,130);
			Color roxoVioleta = new Color(148,0,211);
			
			@Override
			public void mouseClicked(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mousePressed(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseReleased(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseEntered(java.awt.event.MouseEvent e) {
				btnAssuntos.setBackground(roxoVioleta);
			}
			@Override
			public void mouseExited(java.awt.event.MouseEvent e) {
				btnAssuntos.setBackground(roxoIndigo); // Retorna à cor padrão do botão
			}
        });
		
		btnAssuntos.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				//TelaAssuntosProf video = new TelaAssuntosProf(olimp, prof);
			     setVisible(false);

			}
		});
		
		btnFlashcards.addMouseListener(new MouseListener() {
			Color roxoIndigo = new Color(75,0,130);
			Color roxoVioleta = new Color(148,0,211);
			
			@Override
			public void mouseClicked(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mousePressed(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseReleased(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseEntered(java.awt.event.MouseEvent e) {
				btnFlashcards.setBackground(roxoVioleta);
			}
			@Override
			public void mouseExited(java.awt.event.MouseEvent e) {
				btnFlashcards.setBackground(roxoIndigo); // Retorna à cor padrão do botão
			}
        });
		
		btnFlashcards.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
			     setVisible(false);

			}
		});
		
		btnCronograma.addMouseListener(new MouseListener() {
			Color roxoIndigo = new Color(75,0,130);
			Color roxoVioleta = new Color(148,0,211);
			@Override
			public void mouseClicked(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mousePressed(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseReleased(java.awt.event.MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			@Override
			public void mouseEntered(java.awt.event.MouseEvent e) {
				btnCronograma.setBackground(roxoVioleta);
			}
			@Override
			public void mouseExited(java.awt.event.MouseEvent e) {
            	btnCronograma.setBackground(roxoIndigo); // Retorna à cor padrão do botão
			}
        });
		
		btnCronograma.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
			     setVisible(false);

			}
		});
	}
}
