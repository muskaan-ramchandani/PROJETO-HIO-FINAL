CREATE DATABASE hio;
USE hio;

CREATE TABLE Aluno(
	nomeCompleto VARCHAR(200) NOT NULL,
    nomeUsuario VARCHAR(10) NOT NULL,
    email VARCHAR(100) NOT NULL,
    senha VARCHAR(20) NOT NULL,
    PRIMARY KEY(email)
);

CREATE TABLE Professor(
	nomeCompleto VARCHAR(200) NOT NULL,
    nomeUsuario VARCHAR(10) NOT NULL,
    email VARCHAR(100) NOT NULL,
    senha VARCHAR(20) NOT NULL,
    PRIMARY KEY(email)
    );

CREATE TABLE olimpiadasSelecionadas(
	nome VARCHAR(10) NOT NULL,
    emailAluno  VARCHAR(100) NOT NULL,
    FOREIGN KEY(emailAluno) REFERENCES Aluno(email),
    CONSTRAINT olimpiadaNRepete UNIQUE (emailAluno, nome)
);

CREATE TABLE Olimpiada(
	nome VARCHAR(10),
    PRIMARY KEY(nome)
);

INSERT INTO Olimpiada (nome) VALUES ('IMSF'), ('OBG'), ('OBR'), ('OBA'), ('OBI'),
 ('OLAA'), ('OBB'), ('OBL'), ('OMU'), ('OBC'), ('OBMEP'), ('ONC'), ('OBF'), ('OBQ'), ('ONHB'); 
 
 CREATE TABLE Livro(
	isbn VARCHAR(13),
    titulo VARCHAR(100) NOT NULL,
    editora VARCHAR(60) NOT NULL,
    autor VARCHAR(200) NOT NULL,
    dataPublicacao DATE NOT NULL,
    emailProf VARCHAR(100) NOT NULL,
	arquivo_PDF LONGBLOB NOT NULL,
    PRIMARY KEY(isbn),
    FOREIGN KEY(emailProf) REFERENCES Professor(email)
 );
 
  CREATE TABLE OlimpiadaLivro(
	isbn VARCHAR(13) NOT NULL,
	nomeOlimpiada VARCHAR(10) NOT NULL,
	FOREIGN KEY(isbn) REFERENCES Livro (isbn),
	FOREIGN KEY(nomeOlimpiada) REFERENCES Olimpiada(nome),
	CONSTRAINT LivroNRepeteOlimp UNIQUE (nomeOlimpiada, isbn)
);

  CREATE TABLE Video(
	titulo VARCHAR(100) NOT NULL,
	upc VARCHAR(12) NOT NULL,
	produtor  VARCHAR(100) NOT NULL,
	dataPublicacao DATE NOT NULL,
	emailProf VARCHAR(100) NOT NULL,
	arquivo_Video LONGBLOB NOT NULL,
	PRIMARY KEY(upc),
	FOREIGN KEY(emailProf) REFERENCES Professor(email)
);

CREATE TABLE OlimpiadaVideo(
	upcVideo VARCHAR(12) NOT NULL,
	nomeOlimpiada VARCHAR(7) NOT NULL,
	FOREIGN KEY(upcVideo) REFERENCES Video (upc),
	FOREIGN KEY(nomeOlimpiada) REFERENCES Olimpiada(nome),
	CONSTRAINT VideoNRepeteOlimp UNIQUE (nomeOlimpiada, upcVideo)
);

CREATE TABLE Flashcards(
	titulo VARCHAR(100) NOT NULL,
    imagem LONGBLOB NOT NULL,
    palavraChave VARCHAR (100) NOT NULL,
    resumo VARCHAR(250) NOT NULL,
    emailProf VARCHAR(100) NOT NULL,
    PRIMARY KEY (titulo),
    FOREIGN KEY(emailProf) REFERENCES Professor(email)
);


CREATE TABLE OlimpiadaFlashcards(
	tituloFlash VARCHAR(100) NOT NULL,
	nomeOlimpiada VARCHAR(7) NOT NULL,
	FOREIGN KEY(tituloFlash) REFERENCES Flashcards (titulo),
	FOREIGN KEY(nomeOlimpiada) REFERENCES Olimpiada(nome),
	CONSTRAINT FlashNRepeteOlimp UNIQUE (nomeOlimpiada, tituloFlash)
);

CREATE TABLE FavoritosLivro(
	id INT AUTO_INCREMENT NOT NULL, 
	emailAluno VARCHAR(100) NOT NULL,
	isbn VARCHAR(13) NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY(isbn) REFERENCES Livro (isbn),
    FOREIGN KEY(emailAluno) REFERENCES Aluno(email)
);

CREATE TABLE FavoritosVideo(
	id INT AUTO_INCREMENT NOT NULL,
    emailAluno VARCHAR(100) NOT NULL,
    upcVideo VARCHAR(12) NOT NULL,
	PRIMARY KEY (id),
    FOREIGN KEY (upcVideo) REFERENCES Video (upc),
	FOREIGN KEY(emailAluno) REFERENCES Aluno(email)
);


CREATE TABLE FavoritosFlashcard(
	id INT AUTO_INCREMENT NOT NULL,
    emailAluno VARCHAR(100) NOT NULL,
    titulo VARCHAR(100) NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY(emailAluno) REFERENCES Aluno(email),
	FOREIGN KEY(titulo) REFERENCES Flashcard(titulo)
);

CREATE TABLE HistoricoVideosProf(
	id INT AUTO_INCREMENT PRIMARY KEY,
    upc VARCHAR(12) NOT NULL,
	titulo VARCHAR(100) NOT NULL,
    emailProf VARCHAR(100) NOT NULL,
    dataAcesso TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY(emailProf) REFERENCES Professor(email),
	FOREIGN KEY(upc) REFERENCES Video(upc)
);

CREATE TABLE HistoricoLivrosProf(
	id INT AUTO_INCREMENT PRIMARY KEY,
    isbn VARCHAR(13) NOT NULL,
	titulo VARCHAR(100) NOT NULL,
    emailProf VARCHAR(100) NOT NULL,
    dataAcesso TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY(emailProf) REFERENCES Professor(email),
	FOREIGN KEY(isbn) REFERENCES Livro(isbn)
);

CREATE TABLE HistoricoOlimpiadasProf(
	id INT AUTO_INCREMENT PRIMARY KEY,
    nomeOlimp VARCHAR(10) NOT NULL,
    emailProf VARCHAR(100) NOT NULL,
    dataAcesso TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY(emailProf) REFERENCES Professor(email),
	FOREIGN KEY(nomeOlimp) REFERENCES Olimpiada(nome)
);


CREATE TABLE AgendaAluno(
	id INT AUTO_INCREMENT NOT NULL,
	dataSemana DATE NOT NUll,
    diaSemana VARCHAR(14) NOT NULL,
    mes VARCHAR(9) NOT NULL,
    atividade VARCHAR(200),
    emailAluno VARCHAR(100) NOT NULL,
    PRIMARY KEY(id),
    FOREIGN KEY(emailAluno) REFERENCES Aluno(email)
);

CREATE TABLE CronogramaOlimpiada(
	id INT AUTO_INCREMENT NOT NULL,
    nomeOlimpiada  VARCHAR(10),
	comecoInscricoes DATE NOT NULL,
    fimInscricoes DATE NOT NULL,
    comecoFase1 DATE NOT NULL,
	fimFase1 DATE NOT NULL,
    comecoFase2 DATE NOT NULL,
    fimFase2 DATE NOT NULL,
    comecoFase3 DATE,
    fimFase3 DATE,
	comecoFase4 DATE,
    fimFase4 DATE,
    comecoPremiacoes DATE NOT NULL,
    fimPremiacoes DATE NOT NULL,
    PRIMARY KEY(id),
    FOREIGN KEY(nomeOlimpiada) REFERENCES Olimpiada(nome)
);
 
 CREATE TABLE Assunto(
	id INT AUTO_INCREMENT NOT NULL,
	tituloAssunto VARCHAR(100) NOT NULL,
	nomeOlimpiada VARCHAR(10) NOT NULL,
	CONSTRAINT TopicoNRepeteOlimp UNIQUE (nomeOlimpiada, tituloAssunto),
	FOREIGN KEY(nomeOlimpiada) REFERENCES Olimpiada(nome),
	PRIMARY KEY(id)
 );
 
CREATE TABLE AssuntoSubtopico(
	id INT AUTO_INCREMENT NOT NULL,
	topicoPrincipal VARCHAR(100) NOT NULL,
	subtopico VARCHAR(200) NOT NULL,
    nomeOlimpiada VARCHAR(10) NOT NULL,
	FOREIGN KEY(nomeOlimpiada) REFERENCES Olimpiada(nome),
	FOREIGN KEY(topicoPrincipal) REFERENCES Assunto(tituloAssunto),
    FOREIGN KEY(subtopico) REFERENCES Subtopico(descricaoSub),
	CONSTRAINT SubNRepetePrincipal UNIQUE (topicoPrincipal, subtopico),
	PRIMARY KEY(id)
);

CREATE INDEX index_tituloAssunto ON Assunto(tituloAssunto);
CREATE INDEX index_descricaoSub ON Subtopico(descricaoSub);


CREATE TABLE Subtopico(
	id INT AUTO_INCREMENT NOT NULL,
	descricaoSub VARCHAR(200) NOT NULL,
    nomeOlimpiada VARCHAR(10) NOT NULL,
	FOREIGN KEY(nomeOlimpiada) REFERENCES Olimpiada(nome),
	PRIMARY KEY(id)
);
CREATE TABLE Exercicios(
	id INT AUTO_INCREMENT NOT NULL,
    pergunta TEXT NOT NULL,
	alternativaA VARCHAR(100) NOT NULL,
	alternativaB VARCHAR(100) NOT NULL,
	alternativaC VARCHAR(100) NOT NULL,
	alternativaD VARCHAR(100) NOT NULL,
	alternativaCorreta VARCHAR(100) NOT NULL,
	emailProf VARCHAR(100) NOT NULL,
    nomeOlimpiada  VARCHAR(10) NOT NULL,
    subtopico VARCHAR(200) NOT NULL,
    topicoPrincipal VARCHAR(100) NOT NULL,
	PRIMARY KEY(id),
	FOREIGN KEY(emailProf) REFERENCES Professor(email),
	FOREIGN KEY(nomeOlimpiada) REFERENCES Olimpiada(nome),
    FOREIGN KEY(subtopico) REFERENCES Subtopico(descricaoSub),
	FOREIGN KEY(topicoPrincipal) REFERENCES Assunto(tituloAssunto)
);

CREATE TABLE Textos(
	id INT AUTO_INCREMENT NOT NULL,
	texto TEXT NOT NULL,
	subtopico VARCHAR(200) NOT NULL,
    topicoPrincipal VARCHAR(100) NOT NULL,
	emailProf VARCHAR(100) NOT NULL,
	nomeOlimpiada  VARCHAR(10) NOT NULL,
	PRIMARY KEY(id),
    FOREIGN KEY(subtopico) REFERENCES Subtopico(descricaoSub),
	FOREIGN KEY(topicoPrincipal) REFERENCES Assunto(tituloAssunto),
	FOREIGN KEY(emailProf) REFERENCES Professor(email),
	FOREIGN KEY(nomeOlimpiada) REFERENCES Olimpiada(nome)
);

CREATE TABLE EstatisticasAlunoAcertos(
	emailAluno VARCHAR(100) NOT NULL,
    qntdAcertos INT NOT NULL,
	dataAcesso TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY(emailAluno) REFERENCES Aluno(email)
);

CREATE TABLE EstatisticasAlunoErros(
	emailAluno VARCHAR(100) NOT NULL,
    qntdErros INT NOT NULL,
	dataAcesso TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY(emailAluno) REFERENCES Aluno(email)
);

CREATE TABLE EstatisticasAlunoQuestoesHj(
	emailAluno VARCHAR(100) NOT NULL,
    qntd INT NOT NULL,
	dataAcesso TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY(emailAluno) REFERENCES Aluno(email)
);

CREATE TABLE EstatisticasAlunoQuestoesSemana(
	emailAluno VARCHAR(100) NOT NULL,
    qntdAcertos INT NOT NULL,
	dataAcesso TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY(emailAluno) REFERENCES Aluno(email)
);


USE hio;
SET FOREIGN_KEY_CHECKS=0; #desativa
SET FOREIGN_KEY_CHECKS=1; #ativa
